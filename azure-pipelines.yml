trigger:
- main

pool:
  name: 'default'

steps:

- script: |
    echo "First pipeline script"
    echo "Another line of code"

- script: |
    sudo apt-get  update  -y
    sudo apt install -y ansible
    ansible --version
  displayName: 'Installing Ansible'

- script: |
    sudo apt-get update -y
    sudo apt-get install -y ansible-lint
    ansible-lint --version
  displayName: 'Installing Ansible lint'

- script: |
    ansible-lint
  displayName: 'Run ansible-lint'

  #- task: DownloadSecureFile@1
  # name: pemfile
  #inputs:
  #  secureFile: 'my_key.pem'
  #- script: ls -la
  #displayName: 'Downloading .pem file'


  #- script: |
  #   echo "Changing permission of .pem file"
  #   sudo chmod 0600 $(pemfile.secureFilePath)
  #   ls -la
  # displayName: 'Changing Permission of .pem file'

  #- script: |
   #  sudo ln -s $(pemfile.secureFilePath) ./.ssh
    #  ls -la
#  displayName: 'Saving .pem file'

- script: ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -u ubuntu -i ./host_inventory ./playbooks/apache-install.yml --private-key '/home/ubuntu/.ssh/my_key.pem'
  displayName: "installing apache"


- script: ANSIBLE_HOST_KEY_CHECKING=False export ANSIBLE_ROLES_PATH=./roles && ansible-playbook -u ubuntu -i ./host_inventory ./playbooks/website-update.yml --private-key '/home/ubuntu/.ssh/my_key.pem'
  displayName: "running website update"

- script: ANSIBLE_HOST_KEY_CHECKING=False export ANSIBLE_ROLES_PATH=./roles && ansible-playbook -u ubuntu -i ./host_inventory ./playbooks/website-test.yml --private-key '/home/ubuntu/.ssh/my_key.pem'
  displayName: "running website test"

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)'
    includeRootFolder: false
    archiveType: 'tar'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).tar'
    replaceExistingArchive: true